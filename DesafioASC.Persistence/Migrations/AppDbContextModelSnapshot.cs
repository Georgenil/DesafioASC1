// <auto-generated />
using DesafioASC.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace DesafioASC.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DesafioASC.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataHoraAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataHoraAtualizacao");

                    b.Property<DateTime>("DataHoraCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataHoraCriacao");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataHoraFim");

                    b.Property<int>("QuantidadePessoa")
                        .HasColumnType("int")
                        .HasColumnName("quantidadePessoa");

                    b.Property<int>("SalaId")
                        .HasColumnType("int")
                        .HasColumnName("salaId");

                    b.HasKey("Id");

                    b.HasIndex("SalaId");

                    b.ToTable("reserva", (string)null);
                });

            modelBuilder.Entity("DesafioASC.Domain.Entities.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int")
                        .HasColumnName("capacidadeMaxima");

                    b.Property<DateTime?>("DataHoraAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataHoraAtualizacao");

                    b.Property<DateTime>("DataHoraCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataHoraCriacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("sala", (string)null);
                });

            modelBuilder.Entity("DesafioASC.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("DesafioASC.Domain.Entities.Sala", "Sala")
                        .WithMany("Reservas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("DesafioASC.Domain.Entities.Sala", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
